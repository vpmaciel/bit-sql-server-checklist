package br.database;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Collection;
import java.util.LinkedList;

import javax.swing.JOptionPane;

import br.configuracao.Configuracao;

public class HSQLDB {

	private int resultado = 0;
	private StringBuilder sql = new StringBuilder();
	private String url = "jdbc:hsqldb:file:clouddb/db_configuracao";
	private String usuario = "sa";
	private String senha = "";

	public HSQLDB() {
		criarTabela();
	}

	public Collection<Configuracao> getConfiguracao() {
		Collection<Configuracao> listConfiguracao = new LinkedList<Configuracao>();
		Configuracao configuracao = new Configuracao();
		try {
			Class.forName("org.hsqldb.jdbcDriver");
			Connection connection = DriverManager.getConnection(url, usuario, senha);
			Statement stmt = connection.createStatement();
			ResultSet rs = stmt.executeQuery("SELECT * FROM configuracao");

			while (rs.next()) {
				configuracao = new Configuracao();
				configuracao.setId(rs.getInt("id"));
				configuracao.setServidor(rs.getString("servidor"));
				configuracao.setBanco(rs.getString("banco"));
				configuracao.setPorta(rs.getString("porta"));
				configuracao.setUsuario(rs.getString("usuario"));
				configuracao.setSenha(rs.getString("senha"));
				listConfiguracao.add(configuracao);
			}

			System.out.println(resultado);

		} catch (SQLException sqlException) {
			System.out.println("Erro de SQL: " + sqlException);
			sqlException.printStackTrace();
			JOptionPane.showMessageDialog(null, sqlException.getMessage());
		} catch (ClassNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			JOptionPane.showMessageDialog(null, e.getMessage());
		}

		return listConfiguracao;
	}

	public boolean inserirConfiguracao(Configuracao configuracao) {
		if (getConfiguracao().size() == 1) {
			return atualizarConfiguracao(configuracao);
		}
		Statement stmt = null;
		int resultado = 0;
		sql = new StringBuilder();
		sql.append("INSERT INTO configuracao (");
		sql.append("servidor,");
		sql.append("porta,");
		sql.append("banco,");
		sql.append("usuario,");
		sql.append("senha");
		sql.append(") VALUES (");
		sql.append("'" + configuracao.getServidor() + "',");
		sql.append("'" + configuracao.getPorta() + "',");
		sql.append("'" + configuracao.getBanco() + "',");
		sql.append("'" + configuracao.getUsuario() + "',");
		sql.append("'" + configuracao.getSenha() + "'");
		sql.append(");");
		System.out.println(sql.toString());
		try {
			Class.forName("org.hsqldb.jdbcDriver");
			Connection connection = DriverManager.getConnection(url, usuario, senha);
			stmt = connection.createStatement();
			resultado = stmt.executeUpdate(sql.toString());
			connection.commit();

			System.out.println(resultado);
		} catch (Exception e) {
			e.printStackTrace(System.out);
			JOptionPane.showMessageDialog(null, e.getMessage());
		}

		return resultado != 0;
	}

	public boolean atualizarConfiguracao(Configuracao configuracao) {
		Statement stmt = null;
		int resultado = 0;
		sql = new StringBuilder();
		sql.append("UPDATE configuracao SET ");
		sql.append("servidor = ");
		sql.append("'" + configuracao.getServidor() + "'");
		sql.append(", porta = ");
		sql.append("'" + configuracao.getPorta() + "'");
		sql.append(", banco = ");
		sql.append("'" + configuracao.getBanco() + "'");
		sql.append(", usuario = ");
		sql.append("'" + configuracao.getUsuario() + "'");
		sql.append(", senha = ");
		sql.append("'" + configuracao.getSenha() + "'");
		sql.append(" WHERE id = ");
		sql.append(configuracao.getId());
		sql.append(";");

		try {
			Class.forName("org.hsqldb.jdbcDriver");
			Connection connection = DriverManager.getConnection(url, usuario, senha);
			stmt = connection.createStatement();
			resultado = stmt.executeUpdate(sql.toString());
			connection.commit();

			System.out.println(resultado);
		} catch (Exception e) {
			e.printStackTrace(System.out);
			JOptionPane.showMessageDialog(null, e.getMessage());
		}

		return resultado != 0;
	}

	public void criarTabela() {

		sql = new StringBuilder();
		sql.append("CREATE TABLE IF NOT EXISTS configuracao (");
		sql.append("id INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 1, INCREMENT BY 1) PRIMARY KEY,");
		sql.append("servidor VARCHAR(50) NOT NULL,");
		sql.append("porta VARCHAR(50) NOT NULL,");
		sql.append("banco VARCHAR(50) NOT NULL,");
		sql.append("usuario VARCHAR(50) NOT NULL,");
		sql.append("senha VARCHAR(50) NOT NULL");
		sql.append(");");
		try {
			Class.forName("org.hsqldb.jdbcDriver");
			Connection connection = DriverManager.getConnection(url, usuario, senha);
			Statement stmt = connection.createStatement();
			stmt = connection.createStatement();
			resultado = stmt.executeUpdate(sql.toString());

			System.out.println(sql.toString());
		} catch (Exception e) {
			e.printStackTrace(System.out);
			JOptionPane.showMessageDialog(null, e.getMessage());
		}
	}

	public String getServidor() {
		// TODO Auto-generated method stub
		return null;
	}
}
